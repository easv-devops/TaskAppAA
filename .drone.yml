kind: pipeline
type: docker
name: integration

steps:
  - name: build
    image: mcr.microsoft.com/dotnet/sdk
    commands:
      - cd api
      - dotnet build


  - name: test
    image: mcr.microsoft.com/dotnet/sdk
    environment:
      sqlconn:
        from_secret: sqlconn
    commands:
      - cd tests
      - dotnet test



  - name: code-analysis
    image: boulundeasv/dotnet-sdk-with-java
    environment:
      SONARSECRET:
        from_secret: SonarQubeSecret
    commands:
      - dotnet sonarscanner begin
        /k:"easv-devops_TaskAppAA_AY85LDxgEVvRW2O60FJD"
        /d:sonar.host.url="http://sonar.setgo.dk:9000"
        /d:sonar.token="$SONARSECRET"
        /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
        /d:sonar.qualitygate.wait=true
      - dotnet build --no-incremental
      - dotnet-coverage collect "dotnet test" -f xml -o "coverage.xml"
      - dotnet sonarscanner end /d:sonar.token="$SONARSECRET"

---

kind: pipeline
type: docker
name: deliver
depends_on:
  - integration

steps:
  - name: publish api
    image: plugins/docker
    settings:
      username:
        from_secret: DockerUsername
      password:
        from_secret: DockerPassword
      dockerfile: api/Dockerfile
      repo: aleksandramk/taskapp-api
      tags:
        - latest

  - name: publish web
    image: plugins/docker
    settings:
      username:
        from_secret: DockerUsername
      password:
        from_secret: DockerPassword
      context: frontend
      dockerfile: frontend/Dockerfile
      repo: aleksandramk/taskapp-web
      tags:
        - latest
          
  - name: trigger update
    image: curlimages/curl
    commands:
      - "curl --fail -X GET 'http://5.189.170.247:8080/v1/update' -H 'Authorization: Bearer mytoken'" # Must match the token defined in docker-compose.yml
      - sleep 10
    depends_on:
      - publish api
      - publish web

  - name: update database
    image: flyway/flyway
    environment:
      DB_URL:
        from_secret: DBUrlTest
      DB_USER:
          from_secret: DBUser
      DB_PASSWORD:
          from_secret: DBPassword
    commands:
      - flyway migrate
        -url="$DB_URL"
        -user="$DB_USER"
        -password="$DB_PASSWORD"
        -locations=filesystem:./db/sql
    depends_on:
      - trigger update


---

kind: pipeline
type: docker
name: deploy
depends_on:
  - deliver

steps:
  - name: release api
    image: plugins/docker
    settings:
      username:
        from_secret: DockerUsername
      password:
        from_secret: DockerPassword
      dockerfile: api/Dockerfile
      repo: aleksandramk/taskapp-api
      tags:
        - prod

  - name: release web
    image: plugins/docker
    settings:
      username:
        from_secret: DockerUsername
      password:
        from_secret: DockerPassword
      context: frontend
      dockerfile: frontend/Dockerfile
      repo: aleksandramk/taskapp-web
      tags:
        - prod

  - name: trigger update
    image: curlimages/curl
    commands:
      - "curl --fail -X GET 'http://5.189.171.183:8080/v1/update' -H 'Authorization: Bearer mytoken'" # Must match the token defined in docker-compose.yml
      - sleep 10
    depends_on:
      - release api
      - release web

  - name: update database
    image: flyway/flyway
    environment:
      DB_URL:
        from_secret: DBUrlProd
      DB_USER:
        from_secret: DBUser
      DB_PASSWORD:
        from_secret: DBPassword
    commands:
      - flyway migrate
        -url="$DB_URL"
        -user="$DB_USER"
        -password="$DB_PASSWORD"
        -locations=filesystem:./db/sql
    depends_on:
      - trigger update
